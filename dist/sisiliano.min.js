var htmlTempl = htmlTempl || {};

htmlTempl.templates = {
    "src/templates/piano.html": '<div tabindex="0" class="fl-sisiliano" role="slider" aria-label="Piano">\r\n  <svg\r\n    xmlns:osb="http://www.openswatchbook.org/uri/2009/osb"\r\n    xmlns:dc="http://purl.org/dc/elements/1.1/"\r\n    xmlns:cc="http://creativecommons.org/ns#"\r\n    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\r\n    xmlns:svg="http://www.w3.org/2000/svg"\r\n    xmlns="http://www.w3.org/2000/svg"\r\n    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\r\n    class="fl-sisiliano-piano"\r\n    width="100%"\r\n    height="100%"\r\n    viewBox="0 0 {{viewBox.width}} {{viewBox.height}}" >\r\n    <defs\r\n      id="defs4">\r\n      <filter\r\n        style="color-interpolation-filters:sRGB;"\r\n        id="filter6244">\r\n        <feFlood\r\n          flood-opacity="0.5"\r\n          flood-color="black"\r\n          result="flood"\r\n          id="feFlood6246" />\r\n        <feComposite\r\n          in="flood"\r\n          in2="SourceGraphic"\r\n          operator="in"\r\n          result="composite1"\r\n          id="feComposite6248" />\r\n        <feGaussianBlur\r\n          in="composite1"\r\n          stdDeviation="3"\r\n          result="blur"\r\n          id="feGaussianBlur6250" />\r\n        <feOffset\r\n          dx="0"\r\n          dy="1"\r\n          result="offset"\r\n          id="feOffset6252" />\r\n        <feComposite\r\n          in="SourceGraphic"\r\n          in2="offset"\r\n          operator="over"\r\n          result="composite2"\r\n          id="feComposite6254" />\r\n      </filter>\r\n      <filter\r\n        style="color-interpolation-filters:sRGB;"\r\n        id="filter6245">\r\n        <feFlood\r\n          flood-opacity="0.5"\r\n          flood-color="black"\r\n          result="flood"\r\n          id="feFlood6246" />\r\n        <feComposite\r\n          in="flood"\r\n          in2="SourceGraphic"\r\n          operator="in"\r\n          result="composite1"\r\n          id="feComposite6248" />\r\n        <feGaussianBlur\r\n          in="composite1"\r\n          stdDeviation="8"\r\n          result="blur"\r\n          id="feGaussianBlur6250" />\r\n        <feOffset\r\n          dx="-3"\r\n          dy="3.5"\r\n          result="offset"\r\n          id="feOffset6252" />\r\n        <feComposite\r\n          in="SourceGraphic"\r\n          in2="offset"\r\n          operator="over"\r\n          result="composite2"\r\n          id="feComposite6254" />\r\n      </filter>\r\n    </defs>\r\n\r\n    <style>\r\n      /* These styles have been added seperately as a fix for firefox and IE */\r\n      .fl-sisiliano .fl-sisiliano-piano .fl-sisiliano-piano-white-key {\r\n        filter: url(\'#filter6244\');\r\n      }\r\n      .fl-sisiliano .fl-sisiliano-piano .fl-sisiliano-piano-black-key {\r\n        filter: url(\'#filter6244\');\r\n      }\r\n    </style>\r\n    <g style="display:inline">\r\n      {{#each keyBoard.whiteKeys}}\r\n      <rect\r\n        index="{{index}}"\r\n        class="fl-sisiliano-piano-key fl-sisiliano-piano-white-key"\r\n        height="150"\r\n        width="35"\r\n        x="{{x}}"\r\n        y="10" />\r\n      {{/each}}\r\n      {{#each keyBoard.blackKeys}}\r\n      <rect\r\n        index="{{index}}"\r\n        class="fl-sisiliano-piano-key fl-sisiliano-piano-black-key"\r\n        height="100"\r\n        width="27"\r\n        x="{{x}}"\r\n        y="10" />\r\n      {{/each}}\r\n    </g>\r\n\r\n    <g style="display:inline">\r\n      <rect\r\n        class="fl-sisiliano-piano-key fl-sisiliano-piano-disabledArea"\r\n        height="{{disabledArea.left.height}}"\r\n        width="{{disabledArea.left.width}}"\r\n        x="{{disabledArea.left.x}}"\r\n        y="{{disabledArea.left.y}}" />\r\n      <rect\r\n        class="fl-sisiliano-piano-key fl-sisiliano-piano-disabledArea"\r\n        height="{{disabledArea.right.height}}"\r\n        width="{{disabledArea.right.width}}"\r\n        x="{{disabledArea.right.x}}"\r\n        y="{{disabledArea.right.y}}" />\r\n    </g>\r\n  </svg>\r\n</div>\r\n',
    "src/templates/ringCtrl.html": '<div tabindex="0" class="sisiliano" role="slider" aria-label="Ring Slider" aria-valuemax="100" aria-valuemin="0">\r\n  <svg\r\n    xmlns:osb="http://www.openswatchbook.org/uri/2009/osb"\r\n    xmlns:dc="http://purl.org/dc/elements/1.1/"\r\n    xmlns:cc="http://creativecommons.org/ns#"\r\n    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"\r\n    xmlns:svg="http://www.w3.org/2000/svg"\r\n    xmlns="http://www.w3.org/2000/svg"\r\n    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"\r\n    viewBox="0 0 300 300"\r\n    width="100%"\r\n    height="100%">\r\n    <defs\r\n     id="defs4">\r\n      <filter\r\n         style="color-interpolation-filters:sRGB;"\r\n         id="filter6244">\r\n        <feFlood\r\n         flood-opacity="0.4"\r\n         flood-color="black"\r\n         result="flood"\r\n         id="feFlood6246" />\r\n        <feComposite\r\n         in="flood"\r\n         in2="SourceGraphic"\r\n         operator="in"\r\n         result="composite1"\r\n         id="feComposite6248" />\r\n        <feGaussianBlur\r\n         in="composite1"\r\n         stdDeviation="6"\r\n         result="blur"\r\n         id="feGaussianBlur6250" />\r\n        <feOffset\r\n         dx="-3"\r\n         dy="3.5"\r\n         result="offset"\r\n         id="feOffset6252" />\r\n        <feComposite\r\n         in="SourceGraphic"\r\n         in2="offset"\r\n         operator="over"\r\n         result="composite2"\r\n         id="feComposite6254" />\r\n      </filter>\r\n      <filter\r\n         style="color-interpolation-filters:sRGB;"\r\n         id="filter6245">\r\n        <feFlood\r\n         flood-opacity="0.5"\r\n         flood-color="black"\r\n         result="flood"\r\n         id="feFlood6246" />\r\n        <feComposite\r\n         in="flood"\r\n         in2="SourceGraphic"\r\n         operator="in"\r\n         result="composite1"\r\n         id="feComposite6248" />\r\n        <feGaussianBlur\r\n         in="composite1"\r\n         stdDeviation="8"\r\n         result="blur"\r\n         id="feGaussianBlur6250" />\r\n        <feOffset\r\n         dx="-3"\r\n         dy="3.5"\r\n         result="offset"\r\n         id="feOffset6252" />\r\n        <feComposite\r\n         in="SourceGraphic"\r\n         in2="offset"\r\n         operator="over"\r\n         result="composite2"\r\n         id="feComposite6254" />\r\n      </filter>\r\n    </defs>\r\n    \r\n    <style>\r\n      .ctrl-circle {\r\n        filter: url(\'#filter6244\');\r\n      }\r\n      .sisiliano:focus .ctrl-circle {\r\n        filter: url(\'#filter6245\');\r\n      }\r\n    </style>\r\n    \r\n    <g class="ctrl"\r\n     style="display:inline;animadtion: rotarIz 1.5s linear;">\r\n      <circle\r\n         class="ctrl-circle ctrl-circle-background"\r\n         id="circle5634"\r\n         r="130"\r\n         cx="150"\r\n         cy="150"/>\r\n      <circle\r\n         class="ctrl-circle ctrl-circle-cover"\r\n         fill="transparent"\r\n         id="circle5636" \r\n         r="130"\r\n         cx="150"\r\n         cy="150"/>\r\n      <text xmlns="http://www.w3.org/2000/svg" x="40" y="170" \r\n        role="alert" aria-live="assertive"\r\n        class="unselectable value ctrl-circle-value">\r\n        100%\r\n      </text>\r\n    </g>\r\n  </svg>\r\n</div>'
};

var config = {
    frameworkName: "sisiliano"
};

!function(a, b, c) {
    b.defaults("fluid." + a.frameworkName, {});
}(config, fluid, $), function(a, b, c) {
    b.defaults("fluid." + a.frameworkName + ".knob", {
        gradeNames: [ "fluid.viewComponent", "autoInit", "fluid.eventedComponent" ],
        model: {
            color: "#009688",
            value: 0,
            status: {
                prev: {}
            }
        },
        selectors: {
            knob: ".ctrl-circle",
            valueLabel: ".ctrl-circle-value",
            valueRing: ".ctrl-circle-cover",
            valueRingCover: ".ctrl-circle-background",
            rings: ".ctrl-circle"
        },
        events: {
            onChange: null
        },
        listeners: {
            onCreate: {
                func: "fluid." + a.frameworkName + ".knob.onCreate",
                args: [ "{that}" ]
            }
        },
        modelListeners: {
            "": {
                func: "fluid." + a.frameworkName + ".knob.updateUi",
                args: [ "{that}", "{that}.model" ]
            }
        }
    }), b[a.frameworkName].knob.changeValue = function(a, b) {
        "number" != typeof b ? b = 0 : b > 100 ? b = 100 : 0 > b && (b = 0), a.applier.change("value", b);
    }, b[a.frameworkName].knob.updateUi = function(a) {
        if (a.model.value <= 100 && a.model.value >= 0) {
            a.locate("valueLabel").text(a.model.value + "%");
            var b = a.model.circumference / 100 * (100 - a.model.value) + "px";
            a.locate("valueRing").attr("stroke-dashoffset", b);
        }
    }, b[a.frameworkName].knob.initOptions = function(c, d, e) {
        for (var f in d) void 0 !== e[f] && c.applier.change(f, e[f]);
        var g = 0;
        !e.value || "number" != typeof e.value || isNaN(e.value) || e.value > 100 || e.value < 0 || (g = Math.round(e.value)), 
        b[a.frameworkName].knob.changeValue(c, g);
    }, b[a.frameworkName].knob.initKnobUi = function(c) {
        var d = parseInt(c.container.find(".ctrl-circle").attr("r"));
        c.applier.change("radius", d), c.applier.change("circumference", 2 * c.model.radius * Math.PI), 
        c.locate("rings").attr("stroke-dasharray", c.model.circumference + "px"), c.model.color && (c.locate("valueRing").css("stroke", c.model.color), 
        c.locate("valueRingCover").css("stroke", c.model.color), c.locate("valueRing").css("fill", c.model.color), 
        c.locate("valueRingCover").css("fill", c.model.color), c.locate("valueLabel").css("fill", c.model.color)), 
        b[a.frameworkName].knob.updateUi(c, c.model);
    }, b[a.frameworkName].knob.onCreate = function(c) {
        function d(d) {
            b[a.frameworkName].knob.changeValue(c, d);
        }
        function e() {
            c.locate("rings").css("animation", ""), c.locate("rings").css("animation", "rotate 0.5s"), 
            setTimeout(function() {
                c.locate("rings").css("animation", "");
            }, 1e3);
        }
        c.container.html(htmlTempl.templates["src/templates/ringCtrl.html"]), b[a.frameworkName].knob.initOptions(c, c.model, c.options), 
        b[a.frameworkName].knob.initKnobUi(c), c.container.bind("keydown", function(a) {
            return 38 == a.keyCode ? (d(c.model.value + 1), !1) : 40 == a.keyCode ? (d(c.model.value - 1), 
            !1) : void 0;
        }), c.container.bind("mousemove", ".ctrl", function(a) {
            c.model.status.mousedown && (c.model.status.prev.pageY > a.pageY ? d(c.model.value + 1) : c.model.status.prev.pageY < a.pageY && d(c.model.value - 1)), 
            c.applier.change("status.prev", {
                pageX: a.pageX,
                pageY: a.pageY
            });
        }), c.container.bind("mousewheel", ".ctrl", function(a) {
            return c.model.status.mousedown && d(a.originalEvent.wheelDelta < 0 ? c.model.value - 1 : c.model.value + 1), 
            !1;
        }), c.container.bind("DOMMouseScroll", ".ctrl", function(a) {
            return d(a.originalEvent.wheelDelta < 0 ? c.model.value - 1 : c.model.value + 1), 
            !1;
        }), c.container.bind("mousedown", ".ctrl", function(a) {
            c.applier.change("status.mousedown", !0), c.applier.change("status.prev", {
                pageX: a.pageX,
                pageY: a.pageY
            });
        }), c.container.bind("mouseup mouseleave", ".ctrl", function(a) {
            c.applier.change("status.mousedown", !1), e();
        }), c.container.bind("focusout blur", function(a) {
            c.applier.change("status.mousedown", !1), e();
        });
    };
}(config, fluid, $), function(a, b, c) {
    b.defaults("fluid." + a.frameworkName + ".piano", {
        gradeNames: [ "fluid.viewComponent" ],
        model: {
            color: "#009688",
            keyBoard: {
                keys: [],
                whiteKeys: [],
                blackKeys: [],
                length: 50,
                start: 3,
                keyCodeListenerMap: {}
            },
            viewBox: {
                width: 600,
                height: 170
            },
            activeArea: {
                start: 1,
                end: 11
            },
            disabledArea: {
                left: {
                    x: 0,
                    y: 5,
                    width: 100,
                    height: 160
                },
                right: {
                    x: 300,
                    y: 5,
                    width: 300,
                    height: 160
                }
            }
        },
        events: {
            onChange: null
        },
        selectors: {
            root: ".sisiliano",
            keyBoard: ".key-board",
            whiteKeys: ".white-key",
            blackKeys: ".black-key",
            key: ".key"
        },
        listeners: {
            onCreate: {
                func: "fluid." + a.frameworkName + ".piano.onCreate",
                args: [ "{that}", "{that}.dom.keyBoard" ]
            }
        },
        modelListeners: {
            "keyBoard.keyStatus": {
                func: "fluid." + a.frameworkName + ".piano.onChange",
                args: [ "{that}", "[change}" ]
            }
        }
    }), b[a.frameworkName].piano.onChange = function() {}, b[a.frameworkName].piano.onCreate = function(c) {
        b[a.frameworkName].piano.generateKeyboard(c), b[a.frameworkName].piano.appendListeners(c), 
        b[a.frameworkName].piano.moveTabBy(c, 0), b[a.frameworkName].piano.refresh(c);
    }, b[a.frameworkName].piano.refresh = function(c) {
        b[a.frameworkName].util.getTemplate(function(a) {
            var b = a(c.model);
            c.container.html(b);
        }, "src/templates/piano.html");
    }, b[a.frameworkName].piano.updateTheDisabledAreaUI = function(a) {
        for (var b = [ a.model.disabledArea.left, a.model.disabledArea.right ], c = 0; 2 > c; c++) {
            var d = b[c], e = a.container.find(".fl-sisiliano-piano-disabledArea:eq(" + c + ")");
            e.attr("x", d.x), e.attr("y", d.y), e.attr("width", d.width), e.attr("height", d.height);
        }
    }, b[a.frameworkName].piano.moveTabBy = function(c, d) {
        function e(a, b, c) {
            a && f(a) === b ? j[c] = a : j[c] = null;
        }
        function f(c) {
            return b[a.frameworkName].piano.OCTAVE[c.octaveIndex].color;
        }
        if (d) {
            var g = {
                start: c.model.activeArea.start + d,
                end: c.model.activeArea.end + d
            }, h = g.start >= 0 && g.start < c.model.keyBoard.whiteKeys.length && g.end >= 0 && g.end < c.model.keyBoard.whiteKeys.length && g.start < g.end;
            h && (c.model.activeArea.start = g.start, c.model.activeArea.end = g.end);
        }
        for (var i = b[a.frameworkName].piano.COMPUTER_KEYBOARD_CODES_FOR_PIANO, j = c.model.keyBoard.keyCodeListenerMap, k = c.model.activeArea.start, l = 0; k <= c.model.activeArea.end; k++) {
            var m = c.model.keyBoard.whiteKeys[k];
            0 === l && e(m.prev, "BLACK", i[l++]), e(m, "WHITE", i[l++]), e(m.next, "BLACK", i[l++]);
        }
        c.model.disabledArea.left.width = 40 * c.model.activeArea.start, c.model.disabledArea.right.width = 40 * (c.model.keyBoard.whiteKeys.length - c.model.activeArea.end), 
        c.model.activeArea.end < c.model.keyBoard.whiteKeys.length && (c.model.disabledArea.right.x = c.model.keyBoard.whiteKeys[c.model.activeArea.end].x + 40);
    }, b[a.frameworkName].piano.appendListeners = function(c) {
        function d(a, b) {
            a.container.find('.fl-sisiliano-piano-key[index="' + b.index + '"]').attr("class", b["class"] + " " + b.statusClass);
        }
        var e = (b[a.frameworkName].piano.COMPUTER_KEYBOARD_CODES_FOR_PIANO, c.model.keyBoard.keyCodeListenerMap);
        c.container.on("keydown", function(f) {
            var g = f.keyCode, h = e[g];
            switch (h ? "fl-sisiliano-piano-key-pressed" !== h.statusClass && (h.statusClass = "fl-sisiliano-piano-key-pressed", 
            d(c, h)) : console.log("keydown : not found"), g) {
              case 37:
                b[a.frameworkName].piano.moveTabBy(c, -1), b[a.frameworkName].piano.updateTheDisabledAreaUI(c);
                break;

              case 39:
                b[a.frameworkName].piano.moveTabBy(c, 1), b[a.frameworkName].piano.updateTheDisabledAreaUI(c);
            }
        }), c.container.on("keypress", function(a) {}), c.container.on("keyup", function(a) {
            var b = a.keyCode, f = e[b];
            f ? "fl-sisiliano-piano-key-pressed" === f.statusClass && (f.statusClass = null, 
            d(c, f)) : console.log("keyup : not found");
        });
    }, b[a.frameworkName].piano.OCTAVE = {
        0: {
            color: "WHITE",
            note: "c"
        },
        1: {
            color: "BLACK",
            note: "c#"
        },
        2: {
            color: "WHITE",
            note: "d"
        },
        3: {
            color: "BLACK",
            note: "d#"
        },
        4: {
            color: "WHITE",
            note: "e"
        },
        5: {
            color: "WHITE",
            note: "f"
        },
        6: {
            color: "BLACK",
            note: "f#"
        },
        7: {
            color: "WHITE",
            note: "g"
        },
        8: {
            color: "BLACK",
            note: "g#"
        },
        9: {
            color: "WHITE",
            note: "a"
        },
        10: {
            color: "BLACK",
            note: "a#"
        },
        11: {
            color: "WHITE",
            note: "b"
        }
    }, b[a.frameworkName].piano.COMPUTER_KEYBOARD_CODES_FOR_PIANO = [ 81, 65, 87, 83, 69, 68, 82, 70, 84, 71, 89, 72, 85, 74, 73, 75, 79, 76, 80, 186, 219, 222, 221 ], 
    b[a.frameworkName].piano.generateKeyboard = function(c) {
        c.model.keyBoard.keyCodeListenerMap = {}, c.model.keyBoard.whiteKeys = [], c.model.keyBoard.blackKeys = [];
        for (var d; d < b[a.frameworkName].piano.COMPUTER_KEYBOARD_CODES_FOR_PIANO.length; d++) c.model.keyBoard.keyCodeListenerMap = b[a.frameworkName].piano.COMPUTER_KEYBOARD_CODES_FOR_PIANO[d];
        for (var e = c.model.keyBoard.start; e < c.model.keyBoard.length + c.model.keyBoard.start; e++) {
            var f, g = e % 12;
            "WHITE" === b[a.frameworkName].piano.OCTAVE[g].color ? (f = {
                x: 5 + 40 * c.model.keyBoard.whiteKeys.length,
                index: e,
                octaveIndex: g,
                "class": "fl-sisiliano-piano-key fl-sisiliano-piano-white-key"
            }, c.model.keyBoard.whiteKeys.push(f)) : "BLACK" === b[a.frameworkName].piano.OCTAVE[g].color && (f = {
                x: 5 + 40 * (c.model.keyBoard.whiteKeys.length - 1) + 24,
                index: e,
                octaveIndex: g,
                "class": "fl-sisiliano-piano-key fl-sisiliano-piano-black-key"
            }, c.model.keyBoard.blackKeys.push(f)), 0 !== c.model.keyBoard.keys.length && (f.prev = c.model.keyBoard.keys[c.model.keyBoard.keys.length - 1], 
            c.model.keyBoard.keys[c.model.keyBoard.keys.length - 1].next = f), c.model.keyBoard.keys.push(f);
        }
        c.model.viewBox.width = 40 * c.model.keyBoard.whiteKeys.length + 5;
    }, b.registerNamespace("fluid." + a.frameworkName + ".util"), b[a.frameworkName].util.templateCache = {}, 
    b[a.frameworkName].util.getTemplate = function(c, d) {
        var e = b[a.frameworkName].util.templateCache[d];
        if (e) c(e); else {
            var f = htmlTempl.templates["src/templates/piano.html"];
            e = Handlebars.compile(f), b[a.frameworkName].util.templateCache[d] = e, c(e);
        }
    };
}(config, fluid, $);